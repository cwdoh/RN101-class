{"version":3,"sources":["../node_modules/prismjs/components/prism-scheme.min.js"],"names":["Prism","languages","scheme","comment","string","pattern","greedy","keyword","lookbehind","builtin","number","boolean","operator","function","punctuation"],"mappings":"2CAAAA,MAAAC,UAAAC,OAAA,CACAC,QAAA,MACAC,OAAA,CACAC,QAAA,kCACAC,QAAA,GAEAC,QAAA,CACAF,QAAA,oLACAG,YAAA,GAEAC,QAAA,CACAJ,QAAA,gNACAG,YAAA,GAEAE,OAAA,CACAL,QAAA,qDACAG,YAAA,GAEAG,QAAA,QACAC,SAAA,CACAP,QAAA,8BACAG,YAAA,GAEAK,SAAA,CACAR,QAAA,qBACAG,YAAA,GAEAM,YAAA","file":"251.8fa6fdae899254a01de4.worker.js","sourcesContent":["Prism.languages.scheme = {\n  comment: /;.*/,\n  string: {\n    pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'[^('\\s]*/,\n    greedy: !0\n  },\n  keyword: {\n    pattern: /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)/,\n    lookbehind: !0\n  },\n  builtin: {\n    pattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)/,\n    lookbehind: !0\n  },\n  number: {\n    pattern: /(\\s|[()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\n    lookbehind: !0\n  },\n  \"boolean\": /#[tf]/,\n  operator: {\n    pattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)/,\n    lookbehind: !0\n  },\n  \"function\": {\n    pattern: /(\\()[^\\s()]*(?=\\s)/,\n    lookbehind: !0\n  },\n  punctuation: /[()]/\n};"],"sourceRoot":""}