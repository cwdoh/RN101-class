{"version":3,"sources":["../node_modules/prismjs/components/prism-tt2.min.js"],"names":["e","Prism","languages","tt2","extend","comment","pattern","lookbehind","keyword","punctuation","operator","variable","insertBefore","delimiter","alias","single-quoted-string","greedy","double-quoted-string","inside","string","hooks","add","t","buildPlaceholders","tokenizePlaceholders"],"mappings":"2CAAA,IAAAA,KAwCCC,OAvCDC,UAAAC,IAAAH,EAAAE,UAAAE,OAAA,SACAC,QAAA,CACAC,QAAA,sBACAC,YAAA,GAEAC,QAAA,0NACAC,YAAA,sBACGT,EAAAE,UAAAC,IAAAO,gBAAAV,EAAAE,UAAAC,IAAAQ,SAAAX,EAAAE,UAAAU,aAAA,gBACHF,SAAA,iDACAC,SAAA,CACAL,QAAA,sDAEGN,EAAAE,UAAAC,IAAAU,UAAAb,EAAAE,UAAAU,aAAA,iBACHC,UAAA,CACAP,QAAA,sBACAQ,MAAA,iBAEGd,EAAAE,UAAAU,aAAA,gBACHG,uBAAA,CACAT,QAAA,gCACAU,QAAA,EACAF,MAAA,UAEAG,uBAAA,CACAX,QAAA,gCACAU,QAAA,EACAF,MAAA,SACAI,OAAA,CACAP,SAAA,CACAL,QAAA,wDAIGN,EAAAE,UAAAC,IAAAgB,OAAAnB,EAAAoB,MAAAC,IAAA,2BAAAC,GAEHtB,EAAAE,UAAA,qBAAAqB,kBAAAD,EAAA,MADA,qBAEGtB,EAAAoB,MAAAC,IAAA,0BAAAC,GACHtB,EAAAE,UAAA,qBAAAsB,qBAAAF,EAAA","file":"275.8fa6fdae899254a01de4.worker.js","sourcesContent":["!function (e) {\n  e.languages.tt2 = e.languages.extend(\"clike\", {\n    comment: {\n      pattern: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      lookbehind: !0\n    },\n    keyword: /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\n    punctuation: /[[\\]{},()]/\n  }), delete e.languages.tt2.operator, delete e.languages.tt2.variable, e.languages.insertBefore(\"tt2\", \"number\", {\n    operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\n    variable: {\n      pattern: /[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*/i\n    }\n  }), delete e.languages.tt2.delimiter, e.languages.insertBefore(\"tt2\", \"keyword\", {\n    delimiter: {\n      pattern: /^(?:\\[%|%%)-?|-?%]$/,\n      alias: \"punctuation\"\n    }\n  }), e.languages.insertBefore(\"tt2\", \"string\", {\n    \"single-quoted-string\": {\n      pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n      greedy: !0,\n      alias: \"string\"\n    },\n    \"double-quoted-string\": {\n      pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        variable: {\n          pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n        }\n      }\n    }\n  }), delete e.languages.tt2.string, e.hooks.add(\"before-tokenize\", function (t) {\n    var a = /\\[%[\\s\\S]+?%\\]/g;\n    e.languages[\"markup-templating\"].buildPlaceholders(t, \"tt2\", a);\n  }), e.hooks.add(\"after-tokenize\", function (t) {\n    e.languages[\"markup-templating\"].tokenizePlaceholders(t, \"tt2\");\n  });\n}(Prism);"],"sourceRoot":""}