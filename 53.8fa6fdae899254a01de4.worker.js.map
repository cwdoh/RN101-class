{"version":3,"sources":["../node_modules/prismjs/components/prism-csharp.min.js"],"names":["Prism","languages","csharp","extend","keyword","string","pattern","greedy","class-name","inside","punctuation","lookbehind","number","insertBefore","generic-method","function","preprocessor","alias","directive","dotnet"],"mappings":"yCAAAA,MAAAC,UAAAC,OAAAF,MAAAC,UAAAE,OAAA,SACAC,QAAA,6oBACAC,OAAA,EACAC,QAAA,yCACAC,QAAA,GACG,CACHD,QAAA,mCACAC,QAAA,IAEAC,aAAA,EACAF,QAAA,mCACAG,OAAA,CACAC,YAAA,OAEG,CACHJ,QAAA,2BACAK,YAAA,EACAF,OAAA,CACAC,YAAA,OAEG,CACHJ,QAAA,0EACAK,YAAA,EACAF,OAAA,CACAC,YAAA,OAEG,CACHJ,QAAA,wEACAK,YAAA,EACAF,OAAA,CACAC,YAAA,QAGAE,OAAA,8CACCZ,MAAAC,UAAAY,aAAA,uBACDC,iBAAA,CACAR,QAAA,8BACAG,OAAA,CACAM,SAAA,OACAP,aAAA,CACAF,QAAA,yBACAG,OAAA,CACAC,YAAA,OAGAN,QAAAJ,MAAAC,UAAAC,OAAAE,QACAM,YAAA,cAGAM,aAAA,CACAV,QAAA,aACAK,YAAA,EACAM,MAAA,WACAR,OAAA,CACAS,UAAA,CACAZ,QAAA,2FACAK,YAAA,EACAM,MAAA,eAICjB,MAAAC,UAAAkB,OAAAnB,MAAAC,UAAAC","file":"53.8fa6fdae899254a01de4.worker.js","sourcesContent":["Prism.languages.csharp = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n  string: [{\n    pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n    greedy: !0\n  }],\n  \"class-name\": [{\n    pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }],\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i\n}), Prism.languages.insertBefore(\"csharp\", \"class-name\", {\n  \"generic-method\": {\n    pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n    inside: {\n      \"function\": /^\\w+/,\n      \"class-name\": {\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      keyword: Prism.languages.csharp.keyword,\n      punctuation: /[<>(),.:]/\n    }\n  },\n  preprocessor: {\n    pattern: /(^\\s*)#.*/m,\n    lookbehind: !0,\n    alias: \"property\",\n    inside: {\n      directive: {\n        pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n        lookbehind: !0,\n        alias: \"keyword\"\n      }\n    }\n  }\n}), Prism.languages.dotnet = Prism.languages.csharp;"],"sourceRoot":""}